Terminales no usados en gramática

   OTRO


Estado 107 conflictos: 1 desplazamiento(s)/reducción(ones)


Gramática

    0 $accept: Programa $end

    1 Programa: Cabecera_programa bloque

    2 Cabecera_programa: PRINCIPAL PARIZQ PARDER

    3 bloque: INIBLQ Declar_de_variables_locales Declar_de_subprogs Sentencias FINBLQ
    4       | INIBLQ Declar_de_variables_locales Sentencias FINBLQ
    5       | INIBLQ Declar_de_subprogs Sentencias FINBLQ
    6       | INIBLQ Sentencias FINBLQ

    7 Declar_de_subprogs: Cabecera_subprog bloque

    8 Cabecera_subprog: PROCEDIMIENTO IDENT PARIZQ parametros PARDER
    9                 | PROCEDIMIENTO IDENT PARIZQ PARDER

   10 parametros: parametros COMA tipo IDENT
   11           | tipo IDENT

   12 Declar_de_variables_locales: DELIMITADOR Variables_locales DELIMITADOR

   13 Variables_locales: Variables_locales Cuerpo_declar_variables
   14                  | Cuerpo_declar_variables

   15 Cuerpo_declar_variables: tipo lista_nombres PYC

   16 lista_nombres: lista_nombres COMA IDENT
   17              | IDENT

   18 tipo: TIPO
   19     | PILA TIPO

   20 Sentencias: Sentencias Sentencia
   21           | Sentencia

   22 Sentencia: bloque
   23          | sentencia_asignacion
   24          | sentencia_if
   25          | sentencia_while
   26          | sentencia_entrada
   27          | sentencia_salida
   28          | sentencia_hacer_hasta
   29          | llamada_procedimiento

   30 sentencia_asignacion: IDENT ASIG expresion PYC

   31 sentencia_if: SI PARIZQ expresion PARDER Sentencia
   32             | SI PARIZQ expresion PARDER Sentencia sentencia_else

   33 sentencia_else: SINO Sentencia

   34 sentencia_while: MIENTRAS PARIZQ expresion PARDER Sentencia

   35 sentencia_entrada: ENTRADA lista_nombres PYC

   36 sentencia_salida: SALIDA expresiones PYC

   37 sentencia_hacer_hasta: HACER Sentencia HASTA expresion PYC

   38 llamada_procedimiento: IDENT PARIZQ expresiones PARDER PYC
   39                      | IDENT PARIZQ PARDER PYC

   40 expresiones: expresiones COMA expresion
   41            | expresion

   42 expresion: PARIZQ expresion PARDER
   43          | OPUNARIO expresion
   44          | expresion OPBIN expresion
   45          | MASMENOS expresion
   46          | expresion MASMENOS expresion
   47          | expresion MASMAS expresion
   48          | IDENT
   49          | CONST
   50          | CONSTCADENA
   51          | constante_pila

   52 constante_pila: CORCHETEIZQ lista_constantes CORCHETEDER

   53 lista_constantes: lista_constantes COMA CONST
   54                 | CONST


Terminales con las reglas donde aparecen

$end (0) 0
error (256)
PRINCIPAL (258) 2
PROCEDIMIENTO (259) 8 9
TIPO (260) 18 19
PILA (261) 19
CONST (262) 49 53 54
CONSTCADENA (263) 50
ASIG (264) 30
MASMAS (265) 47
MASMENOS (266) 45 46
OPBIN (267) 44
OPUNARIO (268) 43
PARIZQ (269) 2 8 9 31 32 34 38 39 42
PARDER (270) 2 8 9 31 32 34 38 39 42
INIBLQ (271) 3 4 5 6
FINBLQ (272) 3 4 5 6
DELIMITADOR (273) 12
COMA (274) 10 16 40 53
PYC (275) 15 30 35 36 37 38 39
SI (276) 31 32
SINO (277) 33
MIENTRAS (278) 34
HACER (279) 37
HASTA (280) 37
ENTRADA (281) 35
SALIDA (282) 36
CORCHETEIZQ (283) 52
CORCHETEDER (284) 52
IDENT (285) 8 9 10 11 16 17 30 38 39 48
OTRO (286)


No terminales con las reglas donde aparecen

$accept (32)
    en la izquierda: 0
Programa (33)
    en la izquierda: 1, en la derecha: 0
Cabecera_programa (34)
    en la izquierda: 2, en la derecha: 1
bloque (35)
    en la izquierda: 3 4 5 6, en la derecha: 1 7 22
Declar_de_subprogs (36)
    en la izquierda: 7, en la derecha: 3 5
Cabecera_subprog (37)
    en la izquierda: 8 9, en la derecha: 7
parametros (38)
    en la izquierda: 10 11, en la derecha: 8 10
Declar_de_variables_locales (39)
    en la izquierda: 12, en la derecha: 3 4
Variables_locales (40)
    en la izquierda: 13 14, en la derecha: 12 13
Cuerpo_declar_variables (41)
    en la izquierda: 15, en la derecha: 13 14
lista_nombres (42)
    en la izquierda: 16 17, en la derecha: 15 16 35
tipo (43)
    en la izquierda: 18 19, en la derecha: 10 11 15
Sentencias (44)
    en la izquierda: 20 21, en la derecha: 3 4 5 6 20
Sentencia (45)
    en la izquierda: 22 23 24 25 26 27 28 29, en la derecha: 20 21
    31 32 33 34 37
sentencia_asignacion (46)
    en la izquierda: 30, en la derecha: 23
sentencia_if (47)
    en la izquierda: 31 32, en la derecha: 24
sentencia_else (48)
    en la izquierda: 33, en la derecha: 32
sentencia_while (49)
    en la izquierda: 34, en la derecha: 25
sentencia_entrada (50)
    en la izquierda: 35, en la derecha: 26
sentencia_salida (51)
    en la izquierda: 36, en la derecha: 27
sentencia_hacer_hasta (52)
    en la izquierda: 37, en la derecha: 28
llamada_procedimiento (53)
    en la izquierda: 38 39, en la derecha: 29
expresiones (54)
    en la izquierda: 40 41, en la derecha: 36 38 40
expresion (55)
    en la izquierda: 42 43 44 45 46 47 48 49 50 51, en la derecha:
    30 31 32 34 37 40 41 42 43 44 45 46 47
constante_pila (56)
    en la izquierda: 52, en la derecha: 51
lista_constantes (57)
    en la izquierda: 53 54, en la derecha: 52 53


estado 0

    0 $accept: . Programa $end

    PRINCIPAL  desplazar e ir al estado 1

    Programa           ir al estado 2
    Cabecera_programa  ir al estado 3


estado 1

    2 Cabecera_programa: PRINCIPAL . PARIZQ PARDER

    PARIZQ  desplazar e ir al estado 4


estado 2

    0 $accept: Programa . $end

    $end  desplazar e ir al estado 5


estado 3

    1 Programa: Cabecera_programa . bloque

    INIBLQ  desplazar e ir al estado 6

    bloque  ir al estado 7


estado 4

    2 Cabecera_programa: PRINCIPAL PARIZQ . PARDER

    PARDER  desplazar e ir al estado 8


estado 5

    0 $accept: Programa $end .

    $default  aceptar


estado 6

    3 bloque: INIBLQ . Declar_de_variables_locales Declar_de_subprogs Sentencias FINBLQ
    4       | INIBLQ . Declar_de_variables_locales Sentencias FINBLQ
    5       | INIBLQ . Declar_de_subprogs Sentencias FINBLQ
    6       | INIBLQ . Sentencias FINBLQ

    PROCEDIMIENTO  desplazar e ir al estado 9
    INIBLQ         desplazar e ir al estado 6
    DELIMITADOR    desplazar e ir al estado 10
    SI             desplazar e ir al estado 11
    MIENTRAS       desplazar e ir al estado 12
    HACER          desplazar e ir al estado 13
    ENTRADA        desplazar e ir al estado 14
    SALIDA         desplazar e ir al estado 15
    IDENT          desplazar e ir al estado 16

    bloque                       ir al estado 17
    Declar_de_subprogs           ir al estado 18
    Cabecera_subprog             ir al estado 19
    Declar_de_variables_locales  ir al estado 20
    Sentencias                   ir al estado 21
    Sentencia                    ir al estado 22
    sentencia_asignacion         ir al estado 23
    sentencia_if                 ir al estado 24
    sentencia_while              ir al estado 25
    sentencia_entrada            ir al estado 26
    sentencia_salida             ir al estado 27
    sentencia_hacer_hasta        ir al estado 28
    llamada_procedimiento        ir al estado 29


estado 7

    1 Programa: Cabecera_programa bloque .

    $default  reduce usando la regla 1 (Programa)


estado 8

    2 Cabecera_programa: PRINCIPAL PARIZQ PARDER .

    $default  reduce usando la regla 2 (Cabecera_programa)


estado 9

    8 Cabecera_subprog: PROCEDIMIENTO . IDENT PARIZQ parametros PARDER
    9                 | PROCEDIMIENTO . IDENT PARIZQ PARDER

    IDENT  desplazar e ir al estado 30


estado 10

   12 Declar_de_variables_locales: DELIMITADOR . Variables_locales DELIMITADOR

    TIPO  desplazar e ir al estado 31
    PILA  desplazar e ir al estado 32

    Variables_locales        ir al estado 33
    Cuerpo_declar_variables  ir al estado 34
    tipo                     ir al estado 35


estado 11

   31 sentencia_if: SI . PARIZQ expresion PARDER Sentencia
   32             | SI . PARIZQ expresion PARDER Sentencia sentencia_else

    PARIZQ  desplazar e ir al estado 36


estado 12

   34 sentencia_while: MIENTRAS . PARIZQ expresion PARDER Sentencia

    PARIZQ  desplazar e ir al estado 37


estado 13

   37 sentencia_hacer_hasta: HACER . Sentencia HASTA expresion PYC

    INIBLQ    desplazar e ir al estado 6
    SI        desplazar e ir al estado 11
    MIENTRAS  desplazar e ir al estado 12
    HACER     desplazar e ir al estado 13
    ENTRADA   desplazar e ir al estado 14
    SALIDA    desplazar e ir al estado 15
    IDENT     desplazar e ir al estado 16

    bloque                 ir al estado 17
    Sentencia              ir al estado 38
    sentencia_asignacion   ir al estado 23
    sentencia_if           ir al estado 24
    sentencia_while        ir al estado 25
    sentencia_entrada      ir al estado 26
    sentencia_salida       ir al estado 27
    sentencia_hacer_hasta  ir al estado 28
    llamada_procedimiento  ir al estado 29


estado 14

   35 sentencia_entrada: ENTRADA . lista_nombres PYC

    IDENT  desplazar e ir al estado 39

    lista_nombres  ir al estado 40


estado 15

   36 sentencia_salida: SALIDA . expresiones PYC

    CONST        desplazar e ir al estado 41
    CONSTCADENA  desplazar e ir al estado 42
    MASMENOS     desplazar e ir al estado 43
    OPUNARIO     desplazar e ir al estado 44
    PARIZQ       desplazar e ir al estado 45
    CORCHETEIZQ  desplazar e ir al estado 46
    IDENT        desplazar e ir al estado 47

    expresiones     ir al estado 48
    expresion       ir al estado 49
    constante_pila  ir al estado 50


estado 16

   30 sentencia_asignacion: IDENT . ASIG expresion PYC
   38 llamada_procedimiento: IDENT . PARIZQ expresiones PARDER PYC
   39                      | IDENT . PARIZQ PARDER PYC

    ASIG    desplazar e ir al estado 51
    PARIZQ  desplazar e ir al estado 52


estado 17

   22 Sentencia: bloque .

    $default  reduce usando la regla 22 (Sentencia)


estado 18

    5 bloque: INIBLQ Declar_de_subprogs . Sentencias FINBLQ

    INIBLQ    desplazar e ir al estado 6
    SI        desplazar e ir al estado 11
    MIENTRAS  desplazar e ir al estado 12
    HACER     desplazar e ir al estado 13
    ENTRADA   desplazar e ir al estado 14
    SALIDA    desplazar e ir al estado 15
    IDENT     desplazar e ir al estado 16

    bloque                 ir al estado 17
    Sentencias             ir al estado 53
    Sentencia              ir al estado 22
    sentencia_asignacion   ir al estado 23
    sentencia_if           ir al estado 24
    sentencia_while        ir al estado 25
    sentencia_entrada      ir al estado 26
    sentencia_salida       ir al estado 27
    sentencia_hacer_hasta  ir al estado 28
    llamada_procedimiento  ir al estado 29


estado 19

    7 Declar_de_subprogs: Cabecera_subprog . bloque

    INIBLQ  desplazar e ir al estado 6

    bloque  ir al estado 54


estado 20

    3 bloque: INIBLQ Declar_de_variables_locales . Declar_de_subprogs Sentencias FINBLQ
    4       | INIBLQ Declar_de_variables_locales . Sentencias FINBLQ

    PROCEDIMIENTO  desplazar e ir al estado 9
    INIBLQ         desplazar e ir al estado 6
    SI             desplazar e ir al estado 11
    MIENTRAS       desplazar e ir al estado 12
    HACER          desplazar e ir al estado 13
    ENTRADA        desplazar e ir al estado 14
    SALIDA         desplazar e ir al estado 15
    IDENT          desplazar e ir al estado 16

    bloque                 ir al estado 17
    Declar_de_subprogs     ir al estado 55
    Cabecera_subprog       ir al estado 19
    Sentencias             ir al estado 56
    Sentencia              ir al estado 22
    sentencia_asignacion   ir al estado 23
    sentencia_if           ir al estado 24
    sentencia_while        ir al estado 25
    sentencia_entrada      ir al estado 26
    sentencia_salida       ir al estado 27
    sentencia_hacer_hasta  ir al estado 28
    llamada_procedimiento  ir al estado 29


estado 21

    6 bloque: INIBLQ Sentencias . FINBLQ
   20 Sentencias: Sentencias . Sentencia

    INIBLQ    desplazar e ir al estado 6
    FINBLQ    desplazar e ir al estado 57
    SI        desplazar e ir al estado 11
    MIENTRAS  desplazar e ir al estado 12
    HACER     desplazar e ir al estado 13
    ENTRADA   desplazar e ir al estado 14
    SALIDA    desplazar e ir al estado 15
    IDENT     desplazar e ir al estado 16

    bloque                 ir al estado 17
    Sentencia              ir al estado 58
    sentencia_asignacion   ir al estado 23
    sentencia_if           ir al estado 24
    sentencia_while        ir al estado 25
    sentencia_entrada      ir al estado 26
    sentencia_salida       ir al estado 27
    sentencia_hacer_hasta  ir al estado 28
    llamada_procedimiento  ir al estado 29


estado 22

   21 Sentencias: Sentencia .

    $default  reduce usando la regla 21 (Sentencias)


estado 23

   23 Sentencia: sentencia_asignacion .

    $default  reduce usando la regla 23 (Sentencia)


estado 24

   24 Sentencia: sentencia_if .

    $default  reduce usando la regla 24 (Sentencia)


estado 25

   25 Sentencia: sentencia_while .

    $default  reduce usando la regla 25 (Sentencia)


estado 26

   26 Sentencia: sentencia_entrada .

    $default  reduce usando la regla 26 (Sentencia)


estado 27

   27 Sentencia: sentencia_salida .

    $default  reduce usando la regla 27 (Sentencia)


estado 28

   28 Sentencia: sentencia_hacer_hasta .

    $default  reduce usando la regla 28 (Sentencia)


estado 29

   29 Sentencia: llamada_procedimiento .

    $default  reduce usando la regla 29 (Sentencia)


estado 30

    8 Cabecera_subprog: PROCEDIMIENTO IDENT . PARIZQ parametros PARDER
    9                 | PROCEDIMIENTO IDENT . PARIZQ PARDER

    PARIZQ  desplazar e ir al estado 59


estado 31

   18 tipo: TIPO .

    $default  reduce usando la regla 18 (tipo)


estado 32

   19 tipo: PILA . TIPO

    TIPO  desplazar e ir al estado 60


estado 33

   12 Declar_de_variables_locales: DELIMITADOR Variables_locales . DELIMITADOR
   13 Variables_locales: Variables_locales . Cuerpo_declar_variables

    TIPO         desplazar e ir al estado 31
    PILA         desplazar e ir al estado 32
    DELIMITADOR  desplazar e ir al estado 61

    Cuerpo_declar_variables  ir al estado 62
    tipo                     ir al estado 35


estado 34

   14 Variables_locales: Cuerpo_declar_variables .

    $default  reduce usando la regla 14 (Variables_locales)


estado 35

   15 Cuerpo_declar_variables: tipo . lista_nombres PYC

    IDENT  desplazar e ir al estado 39

    lista_nombres  ir al estado 63


estado 36

   31 sentencia_if: SI PARIZQ . expresion PARDER Sentencia
   32             | SI PARIZQ . expresion PARDER Sentencia sentencia_else

    CONST        desplazar e ir al estado 41
    CONSTCADENA  desplazar e ir al estado 42
    MASMENOS     desplazar e ir al estado 43
    OPUNARIO     desplazar e ir al estado 44
    PARIZQ       desplazar e ir al estado 45
    CORCHETEIZQ  desplazar e ir al estado 46
    IDENT        desplazar e ir al estado 47

    expresion       ir al estado 64
    constante_pila  ir al estado 50


estado 37

   34 sentencia_while: MIENTRAS PARIZQ . expresion PARDER Sentencia

    CONST        desplazar e ir al estado 41
    CONSTCADENA  desplazar e ir al estado 42
    MASMENOS     desplazar e ir al estado 43
    OPUNARIO     desplazar e ir al estado 44
    PARIZQ       desplazar e ir al estado 45
    CORCHETEIZQ  desplazar e ir al estado 46
    IDENT        desplazar e ir al estado 47

    expresion       ir al estado 65
    constante_pila  ir al estado 50


estado 38

   37 sentencia_hacer_hasta: HACER Sentencia . HASTA expresion PYC

    HASTA  desplazar e ir al estado 66


estado 39

   17 lista_nombres: IDENT .

    $default  reduce usando la regla 17 (lista_nombres)


estado 40

   16 lista_nombres: lista_nombres . COMA IDENT
   35 sentencia_entrada: ENTRADA lista_nombres . PYC

    COMA  desplazar e ir al estado 67
    PYC   desplazar e ir al estado 68


estado 41

   49 expresion: CONST .

    $default  reduce usando la regla 49 (expresion)


estado 42

   50 expresion: CONSTCADENA .

    $default  reduce usando la regla 50 (expresion)


estado 43

   45 expresion: MASMENOS . expresion

    CONST        desplazar e ir al estado 41
    CONSTCADENA  desplazar e ir al estado 42
    MASMENOS     desplazar e ir al estado 43
    OPUNARIO     desplazar e ir al estado 44
    PARIZQ       desplazar e ir al estado 45
    CORCHETEIZQ  desplazar e ir al estado 46
    IDENT        desplazar e ir al estado 47

    expresion       ir al estado 69
    constante_pila  ir al estado 50


estado 44

   43 expresion: OPUNARIO . expresion

    CONST        desplazar e ir al estado 41
    CONSTCADENA  desplazar e ir al estado 42
    MASMENOS     desplazar e ir al estado 43
    OPUNARIO     desplazar e ir al estado 44
    PARIZQ       desplazar e ir al estado 45
    CORCHETEIZQ  desplazar e ir al estado 46
    IDENT        desplazar e ir al estado 47

    expresion       ir al estado 70
    constante_pila  ir al estado 50


estado 45

   42 expresion: PARIZQ . expresion PARDER

    CONST        desplazar e ir al estado 41
    CONSTCADENA  desplazar e ir al estado 42
    MASMENOS     desplazar e ir al estado 43
    OPUNARIO     desplazar e ir al estado 44
    PARIZQ       desplazar e ir al estado 45
    CORCHETEIZQ  desplazar e ir al estado 46
    IDENT        desplazar e ir al estado 47

    expresion       ir al estado 71
    constante_pila  ir al estado 50


estado 46

   52 constante_pila: CORCHETEIZQ . lista_constantes CORCHETEDER

    CONST  desplazar e ir al estado 72

    lista_constantes  ir al estado 73


estado 47

   48 expresion: IDENT .

    $default  reduce usando la regla 48 (expresion)


estado 48

   36 sentencia_salida: SALIDA expresiones . PYC
   40 expresiones: expresiones . COMA expresion

    COMA  desplazar e ir al estado 74
    PYC   desplazar e ir al estado 75


estado 49

   41 expresiones: expresion .
   44 expresion: expresion . OPBIN expresion
   46          | expresion . MASMENOS expresion
   47          | expresion . MASMAS expresion

    MASMAS    desplazar e ir al estado 76
    MASMENOS  desplazar e ir al estado 77
    OPBIN     desplazar e ir al estado 78

    $default  reduce usando la regla 41 (expresiones)


estado 50

   51 expresion: constante_pila .

    $default  reduce usando la regla 51 (expresion)


estado 51

   30 sentencia_asignacion: IDENT ASIG . expresion PYC

    CONST        desplazar e ir al estado 41
    CONSTCADENA  desplazar e ir al estado 42
    MASMENOS     desplazar e ir al estado 43
    OPUNARIO     desplazar e ir al estado 44
    PARIZQ       desplazar e ir al estado 45
    CORCHETEIZQ  desplazar e ir al estado 46
    IDENT        desplazar e ir al estado 47

    expresion       ir al estado 79
    constante_pila  ir al estado 50


estado 52

   38 llamada_procedimiento: IDENT PARIZQ . expresiones PARDER PYC
   39                      | IDENT PARIZQ . PARDER PYC

    CONST        desplazar e ir al estado 41
    CONSTCADENA  desplazar e ir al estado 42
    MASMENOS     desplazar e ir al estado 43
    OPUNARIO     desplazar e ir al estado 44
    PARIZQ       desplazar e ir al estado 45
    PARDER       desplazar e ir al estado 80
    CORCHETEIZQ  desplazar e ir al estado 46
    IDENT        desplazar e ir al estado 47

    expresiones     ir al estado 81
    expresion       ir al estado 49
    constante_pila  ir al estado 50


estado 53

    5 bloque: INIBLQ Declar_de_subprogs Sentencias . FINBLQ
   20 Sentencias: Sentencias . Sentencia

    INIBLQ    desplazar e ir al estado 6
    FINBLQ    desplazar e ir al estado 82
    SI        desplazar e ir al estado 11
    MIENTRAS  desplazar e ir al estado 12
    HACER     desplazar e ir al estado 13
    ENTRADA   desplazar e ir al estado 14
    SALIDA    desplazar e ir al estado 15
    IDENT     desplazar e ir al estado 16

    bloque                 ir al estado 17
    Sentencia              ir al estado 58
    sentencia_asignacion   ir al estado 23
    sentencia_if           ir al estado 24
    sentencia_while        ir al estado 25
    sentencia_entrada      ir al estado 26
    sentencia_salida       ir al estado 27
    sentencia_hacer_hasta  ir al estado 28
    llamada_procedimiento  ir al estado 29


estado 54

    7 Declar_de_subprogs: Cabecera_subprog bloque .

    $default  reduce usando la regla 7 (Declar_de_subprogs)


estado 55

    3 bloque: INIBLQ Declar_de_variables_locales Declar_de_subprogs . Sentencias FINBLQ

    INIBLQ    desplazar e ir al estado 6
    SI        desplazar e ir al estado 11
    MIENTRAS  desplazar e ir al estado 12
    HACER     desplazar e ir al estado 13
    ENTRADA   desplazar e ir al estado 14
    SALIDA    desplazar e ir al estado 15
    IDENT     desplazar e ir al estado 16

    bloque                 ir al estado 17
    Sentencias             ir al estado 83
    Sentencia              ir al estado 22
    sentencia_asignacion   ir al estado 23
    sentencia_if           ir al estado 24
    sentencia_while        ir al estado 25
    sentencia_entrada      ir al estado 26
    sentencia_salida       ir al estado 27
    sentencia_hacer_hasta  ir al estado 28
    llamada_procedimiento  ir al estado 29


estado 56

    4 bloque: INIBLQ Declar_de_variables_locales Sentencias . FINBLQ
   20 Sentencias: Sentencias . Sentencia

    INIBLQ    desplazar e ir al estado 6
    FINBLQ    desplazar e ir al estado 84
    SI        desplazar e ir al estado 11
    MIENTRAS  desplazar e ir al estado 12
    HACER     desplazar e ir al estado 13
    ENTRADA   desplazar e ir al estado 14
    SALIDA    desplazar e ir al estado 15
    IDENT     desplazar e ir al estado 16

    bloque                 ir al estado 17
    Sentencia              ir al estado 58
    sentencia_asignacion   ir al estado 23
    sentencia_if           ir al estado 24
    sentencia_while        ir al estado 25
    sentencia_entrada      ir al estado 26
    sentencia_salida       ir al estado 27
    sentencia_hacer_hasta  ir al estado 28
    llamada_procedimiento  ir al estado 29


estado 57

    6 bloque: INIBLQ Sentencias FINBLQ .

    $default  reduce usando la regla 6 (bloque)


estado 58

   20 Sentencias: Sentencias Sentencia .

    $default  reduce usando la regla 20 (Sentencias)


estado 59

    8 Cabecera_subprog: PROCEDIMIENTO IDENT PARIZQ . parametros PARDER
    9                 | PROCEDIMIENTO IDENT PARIZQ . PARDER

    TIPO    desplazar e ir al estado 31
    PILA    desplazar e ir al estado 32
    PARDER  desplazar e ir al estado 85

    parametros  ir al estado 86
    tipo        ir al estado 87


estado 60

   19 tipo: PILA TIPO .

    $default  reduce usando la regla 19 (tipo)


estado 61

   12 Declar_de_variables_locales: DELIMITADOR Variables_locales DELIMITADOR .

    $default  reduce usando la regla 12 (Declar_de_variables_locales)


estado 62

   13 Variables_locales: Variables_locales Cuerpo_declar_variables .

    $default  reduce usando la regla 13 (Variables_locales)


estado 63

   15 Cuerpo_declar_variables: tipo lista_nombres . PYC
   16 lista_nombres: lista_nombres . COMA IDENT

    COMA  desplazar e ir al estado 67
    PYC   desplazar e ir al estado 88


estado 64

   31 sentencia_if: SI PARIZQ expresion . PARDER Sentencia
   32             | SI PARIZQ expresion . PARDER Sentencia sentencia_else
   44 expresion: expresion . OPBIN expresion
   46          | expresion . MASMENOS expresion
   47          | expresion . MASMAS expresion

    MASMAS    desplazar e ir al estado 76
    MASMENOS  desplazar e ir al estado 77
    OPBIN     desplazar e ir al estado 78
    PARDER    desplazar e ir al estado 89


estado 65

   34 sentencia_while: MIENTRAS PARIZQ expresion . PARDER Sentencia
   44 expresion: expresion . OPBIN expresion
   46          | expresion . MASMENOS expresion
   47          | expresion . MASMAS expresion

    MASMAS    desplazar e ir al estado 76
    MASMENOS  desplazar e ir al estado 77
    OPBIN     desplazar e ir al estado 78
    PARDER    desplazar e ir al estado 90


estado 66

   37 sentencia_hacer_hasta: HACER Sentencia HASTA . expresion PYC

    CONST        desplazar e ir al estado 41
    CONSTCADENA  desplazar e ir al estado 42
    MASMENOS     desplazar e ir al estado 43
    OPUNARIO     desplazar e ir al estado 44
    PARIZQ       desplazar e ir al estado 45
    CORCHETEIZQ  desplazar e ir al estado 46
    IDENT        desplazar e ir al estado 47

    expresion       ir al estado 91
    constante_pila  ir al estado 50


estado 67

   16 lista_nombres: lista_nombres COMA . IDENT

    IDENT  desplazar e ir al estado 92


estado 68

   35 sentencia_entrada: ENTRADA lista_nombres PYC .

    $default  reduce usando la regla 35 (sentencia_entrada)


estado 69

   44 expresion: expresion . OPBIN expresion
   45          | MASMENOS expresion .
   46          | expresion . MASMENOS expresion
   47          | expresion . MASMAS expresion

    $default  reduce usando la regla 45 (expresion)


estado 70

   43 expresion: OPUNARIO expresion .
   44          | expresion . OPBIN expresion
   46          | expresion . MASMENOS expresion
   47          | expresion . MASMAS expresion

    MASMENOS  desplazar e ir al estado 77
    OPBIN     desplazar e ir al estado 78

    $default  reduce usando la regla 43 (expresion)


estado 71

   42 expresion: PARIZQ expresion . PARDER
   44          | expresion . OPBIN expresion
   46          | expresion . MASMENOS expresion
   47          | expresion . MASMAS expresion

    MASMAS    desplazar e ir al estado 76
    MASMENOS  desplazar e ir al estado 77
    OPBIN     desplazar e ir al estado 78
    PARDER    desplazar e ir al estado 93


estado 72

   54 lista_constantes: CONST .

    $default  reduce usando la regla 54 (lista_constantes)


estado 73

   52 constante_pila: CORCHETEIZQ lista_constantes . CORCHETEDER
   53 lista_constantes: lista_constantes . COMA CONST

    COMA         desplazar e ir al estado 94
    CORCHETEDER  desplazar e ir al estado 95


estado 74

   40 expresiones: expresiones COMA . expresion

    CONST        desplazar e ir al estado 41
    CONSTCADENA  desplazar e ir al estado 42
    MASMENOS     desplazar e ir al estado 43
    OPUNARIO     desplazar e ir al estado 44
    PARIZQ       desplazar e ir al estado 45
    CORCHETEIZQ  desplazar e ir al estado 46
    IDENT        desplazar e ir al estado 47

    expresion       ir al estado 96
    constante_pila  ir al estado 50


estado 75

   36 sentencia_salida: SALIDA expresiones PYC .

    $default  reduce usando la regla 36 (sentencia_salida)


estado 76

   47 expresion: expresion MASMAS . expresion

    CONST        desplazar e ir al estado 41
    CONSTCADENA  desplazar e ir al estado 42
    MASMENOS     desplazar e ir al estado 43
    OPUNARIO     desplazar e ir al estado 44
    PARIZQ       desplazar e ir al estado 45
    CORCHETEIZQ  desplazar e ir al estado 46
    IDENT        desplazar e ir al estado 47

    expresion       ir al estado 97
    constante_pila  ir al estado 50


estado 77

   46 expresion: expresion MASMENOS . expresion

    CONST        desplazar e ir al estado 41
    CONSTCADENA  desplazar e ir al estado 42
    MASMENOS     desplazar e ir al estado 43
    OPUNARIO     desplazar e ir al estado 44
    PARIZQ       desplazar e ir al estado 45
    CORCHETEIZQ  desplazar e ir al estado 46
    IDENT        desplazar e ir al estado 47

    expresion       ir al estado 98
    constante_pila  ir al estado 50


estado 78

   44 expresion: expresion OPBIN . expresion

    CONST        desplazar e ir al estado 41
    CONSTCADENA  desplazar e ir al estado 42
    MASMENOS     desplazar e ir al estado 43
    OPUNARIO     desplazar e ir al estado 44
    PARIZQ       desplazar e ir al estado 45
    CORCHETEIZQ  desplazar e ir al estado 46
    IDENT        desplazar e ir al estado 47

    expresion       ir al estado 99
    constante_pila  ir al estado 50


estado 79

   30 sentencia_asignacion: IDENT ASIG expresion . PYC
   44 expresion: expresion . OPBIN expresion
   46          | expresion . MASMENOS expresion
   47          | expresion . MASMAS expresion

    MASMAS    desplazar e ir al estado 76
    MASMENOS  desplazar e ir al estado 77
    OPBIN     desplazar e ir al estado 78
    PYC       desplazar e ir al estado 100


estado 80

   39 llamada_procedimiento: IDENT PARIZQ PARDER . PYC

    PYC  desplazar e ir al estado 101


estado 81

   38 llamada_procedimiento: IDENT PARIZQ expresiones . PARDER PYC
   40 expresiones: expresiones . COMA expresion

    PARDER  desplazar e ir al estado 102
    COMA    desplazar e ir al estado 74


estado 82

    5 bloque: INIBLQ Declar_de_subprogs Sentencias FINBLQ .

    $default  reduce usando la regla 5 (bloque)


estado 83

    3 bloque: INIBLQ Declar_de_variables_locales Declar_de_subprogs Sentencias . FINBLQ
   20 Sentencias: Sentencias . Sentencia

    INIBLQ    desplazar e ir al estado 6
    FINBLQ    desplazar e ir al estado 103
    SI        desplazar e ir al estado 11
    MIENTRAS  desplazar e ir al estado 12
    HACER     desplazar e ir al estado 13
    ENTRADA   desplazar e ir al estado 14
    SALIDA    desplazar e ir al estado 15
    IDENT     desplazar e ir al estado 16

    bloque                 ir al estado 17
    Sentencia              ir al estado 58
    sentencia_asignacion   ir al estado 23
    sentencia_if           ir al estado 24
    sentencia_while        ir al estado 25
    sentencia_entrada      ir al estado 26
    sentencia_salida       ir al estado 27
    sentencia_hacer_hasta  ir al estado 28
    llamada_procedimiento  ir al estado 29


estado 84

    4 bloque: INIBLQ Declar_de_variables_locales Sentencias FINBLQ .

    $default  reduce usando la regla 4 (bloque)


estado 85

    9 Cabecera_subprog: PROCEDIMIENTO IDENT PARIZQ PARDER .

    $default  reduce usando la regla 9 (Cabecera_subprog)


estado 86

    8 Cabecera_subprog: PROCEDIMIENTO IDENT PARIZQ parametros . PARDER
   10 parametros: parametros . COMA tipo IDENT

    PARDER  desplazar e ir al estado 104
    COMA    desplazar e ir al estado 105


estado 87

   11 parametros: tipo . IDENT

    IDENT  desplazar e ir al estado 106


estado 88

   15 Cuerpo_declar_variables: tipo lista_nombres PYC .

    $default  reduce usando la regla 15 (Cuerpo_declar_variables)


estado 89

   31 sentencia_if: SI PARIZQ expresion PARDER . Sentencia
   32             | SI PARIZQ expresion PARDER . Sentencia sentencia_else

    INIBLQ    desplazar e ir al estado 6
    SI        desplazar e ir al estado 11
    MIENTRAS  desplazar e ir al estado 12
    HACER     desplazar e ir al estado 13
    ENTRADA   desplazar e ir al estado 14
    SALIDA    desplazar e ir al estado 15
    IDENT     desplazar e ir al estado 16

    bloque                 ir al estado 17
    Sentencia              ir al estado 107
    sentencia_asignacion   ir al estado 23
    sentencia_if           ir al estado 24
    sentencia_while        ir al estado 25
    sentencia_entrada      ir al estado 26
    sentencia_salida       ir al estado 27
    sentencia_hacer_hasta  ir al estado 28
    llamada_procedimiento  ir al estado 29


estado 90

   34 sentencia_while: MIENTRAS PARIZQ expresion PARDER . Sentencia

    INIBLQ    desplazar e ir al estado 6
    SI        desplazar e ir al estado 11
    MIENTRAS  desplazar e ir al estado 12
    HACER     desplazar e ir al estado 13
    ENTRADA   desplazar e ir al estado 14
    SALIDA    desplazar e ir al estado 15
    IDENT     desplazar e ir al estado 16

    bloque                 ir al estado 17
    Sentencia              ir al estado 108
    sentencia_asignacion   ir al estado 23
    sentencia_if           ir al estado 24
    sentencia_while        ir al estado 25
    sentencia_entrada      ir al estado 26
    sentencia_salida       ir al estado 27
    sentencia_hacer_hasta  ir al estado 28
    llamada_procedimiento  ir al estado 29


estado 91

   37 sentencia_hacer_hasta: HACER Sentencia HASTA expresion . PYC
   44 expresion: expresion . OPBIN expresion
   46          | expresion . MASMENOS expresion
   47          | expresion . MASMAS expresion

    MASMAS    desplazar e ir al estado 76
    MASMENOS  desplazar e ir al estado 77
    OPBIN     desplazar e ir al estado 78
    PYC       desplazar e ir al estado 109


estado 92

   16 lista_nombres: lista_nombres COMA IDENT .

    $default  reduce usando la regla 16 (lista_nombres)


estado 93

   42 expresion: PARIZQ expresion PARDER .

    $default  reduce usando la regla 42 (expresion)


estado 94

   53 lista_constantes: lista_constantes COMA . CONST

    CONST  desplazar e ir al estado 110


estado 95

   52 constante_pila: CORCHETEIZQ lista_constantes CORCHETEDER .

    $default  reduce usando la regla 52 (constante_pila)


estado 96

   40 expresiones: expresiones COMA expresion .
   44 expresion: expresion . OPBIN expresion
   46          | expresion . MASMENOS expresion
   47          | expresion . MASMAS expresion

    MASMAS    desplazar e ir al estado 76
    MASMENOS  desplazar e ir al estado 77
    OPBIN     desplazar e ir al estado 78

    $default  reduce usando la regla 40 (expresiones)


estado 97

   44 expresion: expresion . OPBIN expresion
   46          | expresion . MASMENOS expresion
   47          | expresion . MASMAS expresion
   47          | expresion MASMAS expresion .

    MASMENOS  desplazar e ir al estado 77
    OPBIN     desplazar e ir al estado 78

    $default  reduce usando la regla 47 (expresion)


estado 98

   44 expresion: expresion . OPBIN expresion
   46          | expresion . MASMENOS expresion
   46          | expresion MASMENOS expresion .
   47          | expresion . MASMAS expresion

    $default  reduce usando la regla 46 (expresion)


estado 99

   44 expresion: expresion . OPBIN expresion
   44          | expresion OPBIN expresion .
   46          | expresion . MASMENOS expresion
   47          | expresion . MASMAS expresion

    MASMENOS  desplazar e ir al estado 77

    $default  reduce usando la regla 44 (expresion)


estado 100

   30 sentencia_asignacion: IDENT ASIG expresion PYC .

    $default  reduce usando la regla 30 (sentencia_asignacion)


estado 101

   39 llamada_procedimiento: IDENT PARIZQ PARDER PYC .

    $default  reduce usando la regla 39 (llamada_procedimiento)


estado 102

   38 llamada_procedimiento: IDENT PARIZQ expresiones PARDER . PYC

    PYC  desplazar e ir al estado 111


estado 103

    3 bloque: INIBLQ Declar_de_variables_locales Declar_de_subprogs Sentencias FINBLQ .

    $default  reduce usando la regla 3 (bloque)


estado 104

    8 Cabecera_subprog: PROCEDIMIENTO IDENT PARIZQ parametros PARDER .

    $default  reduce usando la regla 8 (Cabecera_subprog)


estado 105

   10 parametros: parametros COMA . tipo IDENT

    TIPO  desplazar e ir al estado 31
    PILA  desplazar e ir al estado 32

    tipo  ir al estado 112


estado 106

   11 parametros: tipo IDENT .

    $default  reduce usando la regla 11 (parametros)


estado 107

   31 sentencia_if: SI PARIZQ expresion PARDER Sentencia .
   32             | SI PARIZQ expresion PARDER Sentencia . sentencia_else

    SINO  desplazar e ir al estado 113

    SINO      [reduce usando la regla 31 (sentencia_if)]
    $default  reduce usando la regla 31 (sentencia_if)

    sentencia_else  ir al estado 114


estado 108

   34 sentencia_while: MIENTRAS PARIZQ expresion PARDER Sentencia .

    $default  reduce usando la regla 34 (sentencia_while)


estado 109

   37 sentencia_hacer_hasta: HACER Sentencia HASTA expresion PYC .

    $default  reduce usando la regla 37 (sentencia_hacer_hasta)


estado 110

   53 lista_constantes: lista_constantes COMA CONST .

    $default  reduce usando la regla 53 (lista_constantes)


estado 111

   38 llamada_procedimiento: IDENT PARIZQ expresiones PARDER PYC .

    $default  reduce usando la regla 38 (llamada_procedimiento)


estado 112

   10 parametros: parametros COMA tipo . IDENT

    IDENT  desplazar e ir al estado 115


estado 113

   33 sentencia_else: SINO . Sentencia

    INIBLQ    desplazar e ir al estado 6
    SI        desplazar e ir al estado 11
    MIENTRAS  desplazar e ir al estado 12
    HACER     desplazar e ir al estado 13
    ENTRADA   desplazar e ir al estado 14
    SALIDA    desplazar e ir al estado 15
    IDENT     desplazar e ir al estado 16

    bloque                 ir al estado 17
    Sentencia              ir al estado 116
    sentencia_asignacion   ir al estado 23
    sentencia_if           ir al estado 24
    sentencia_while        ir al estado 25
    sentencia_entrada      ir al estado 26
    sentencia_salida       ir al estado 27
    sentencia_hacer_hasta  ir al estado 28
    llamada_procedimiento  ir al estado 29


estado 114

   32 sentencia_if: SI PARIZQ expresion PARDER Sentencia sentencia_else .

    $default  reduce usando la regla 32 (sentencia_if)


estado 115

   10 parametros: parametros COMA tipo IDENT .

    $default  reduce usando la regla 10 (parametros)


estado 116

   33 sentencia_else: SINO Sentencia .

    $default  reduce usando la regla 33 (sentencia_else)
