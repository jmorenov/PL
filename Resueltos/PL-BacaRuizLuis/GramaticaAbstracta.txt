programas : MAIN bloque ;
bloque : INI_BLOQUE declar_de_variables_locales declar_de_subprog sentencias FIN_BLOQUE ;
variable : NOMBRE ;
argumentos : TIPO_DATO variable ;
	| argumentos ;
declar_de_variables_locales : I_VAR_LOCAL variables_locales F_VAR_LOCAL ;
declar_de_subprogs : declar_de_subprogs declar_subprog ;
sentencias : sentencias sentencia ;
	| sentencia ;

sentencias : bloque ;
	| sentencia_asignacion ;
	| sentencia_if ;
	| sentencia_while ;
	| sentencia_entrada ;
	| sentencia_salida ;
	| sentencia_return ;
	| sentencia_switch ;
variables_locales : variables_locales cuerpo_declar_variables ;
	| cuerpo_declar_variables ;
declar_subprog : cabecera_subprog bloque ;
sentencia_asignacion : variable ASIG expresion FIN_SENTENC ;
sentencia_if : IF PARIZQ condicion PARDER sentencia ;
	| IF PARIZQ condicion PARDER sentencia ELSE sentencia ;
sentencia_while : WHILE PARIZQ condicion PARDER sentencia ;
sentencia_entrada : INPUT lista_variables ;
lista_variables : lista_variables BINARIO variable ;
	| variable ;
sentencia_salida : OUTPUT lista_expresiones_o_salidas ;
lista_expresiones_o_salida : lista_expresiones_o_salidas BINARIO expresion_cadena ;
	| expresion_cadena ;
expresion_cadena : expresion ;
	| CADENA ;
sentencia_return : RETURN expresion FIN_SENTENC ;
sentencia_switch : SWITCH PARIZQ variable PARDER INI_BLOQUE bloque_switch FIN_BLOQUE ;
cuerpo_declar_variables : TIPO_DATO lista_variables FIN_SENTENC ;
condicion : variable BINARIO variable ;
	| BINARIO variable ;
expresiones_return : variable ;
	| CONS_BOOL ;
bloque_switch : CASE expresion DOS_PUNTOS sentencia BREAK FIN_SENTENC bloque_switch ;
cabecera_subprog : TIPO_DATO variable PARIZQ param PARDER ;
param : param BINARIO TIPO_DATO variable ;
	| tipo_dato variable ;
expresion : PARIZQ expresion PARDER ;
	| UNARIO expresion ;
	| expresion BINARIO expresion ;
	| variable ;
	| constante ;
	| funcion ;
constante : ENTERO ;
   	| REAL ;
   	| BOOL ;
   	| CHAR ;
   	| const_pila ;
const_pila : const_pila_entero ;
	| const_pila_real ;
	| const_pila_booleano ;
	| const_pila_caracter ;
const_pila_entero : I_CONS_PILA lista_const_entero F_CONS_PILA ;
lista_const_entero : lista_const_entero BINARIO ENTERO ;
	| ENTERO ;
const_pila_real : I_CONS_PILA lista_const_real F_CONS_PILA ;
lista_const_real : lista_const_real BINARIO const_real ;
	| const_real ;
const_pila_booleano : I_CONS_PILA lista_const_booleano F_CONS_PILA ;
lista_const_booleano : lista_const_boolenao ;
	| BOOL ;
lista_const_caracter : I_CONS_PILA lista_const_ caracter F_CONS_PILA final_const_ caracter ;
lista_const_caracter : lista_const_caracter CHAR ;
	| CHAR ;
funcion : variable PARIZQ lista_expresion PARDER ;
lista_expresion : lista_expresion BINARIO expresion ;
	| expresion ;
