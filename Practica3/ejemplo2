main()
{
var
int
float
char
bool
stack
stack
stack
stack
endvar
ve ;
vf ;
vc ;
vl ;
int
float
char
bool
pe, pe2 ;
pf, pf2 ;
pc, pc2 ;
pl ;
int funcionA (int a1, float a2, char a3)
{
var
int x1, x2 ;
endvar
char funcionB (char b1, bool b2)
{
var
float xf, x2 ;
endvar
float funcionC (bool c1, int c2)
{
var
float x1 ;
endvar
x1= 1.3 ;
if (c2>10)
c2= c2-1 ;
else
x1= 3.1 ;
return x1 ;
}
xf= functionC (true, 10);
x2= xf*(funcionC(false,1)-funcionC(true,23))/10.0;
while (x2*funcionC(false,1)-xf<10.0)
x2= x2*xf ;
}
float funcionD (float d1)
{
var
char dato ;
int valor ;
endvar
char funcionE (char e1, char e2)
{
read "introduzca dos caracteres: ", e1, e2 ;
if (e1==’a’)
return e1 ;
else if (e1==’b’)
return e2 ;
else
return ’ ’;
}
read "introduzca un valor entero: ", valor ;
if (d1>0.0)
{
var
int dato ;
endvar
dato= 2 ;
dato= valor*20/dato ;
}
else {
valor= valor * 100 ;
d1= d1/1000.0 ;
}
return d1 ;
}
pe= pe<-10 ;
pf= pf<-10.0 ;
pc= pc<-’#’ ;
/* Inserta 10 en la pila ’pe’ */
/* Inserta 10.0 en la pila ’pf’ */
/* Inserta # en la pila ’pc’ */
if (?(pe<-20) == 20)
ve= pe-> ;
else
pe= pe * pe2 ;
pe= pe2 - pe <- 10
/* Inserta 20 y si el tope de la pila ’pe’ es 20 */
/* Extrae el tope de la pila y lo guarda en ’ve’ */
/* Multiplica pe y pe2 y lo almacena en pe */
* (20/2000) ;
}