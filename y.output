Terminales no usados en gramática

   OP_PM
   DIGIT
   LETTER
   SYMBOL
   MINUS
   POINT


Estado 22 conflictos: 8 desplazamiento(s)/reducción(ones)
Estado 25 conflictos: 8 desplazamiento(s)/reducción(ones)
Estado 34 conflictos: 8 desplazamiento(s)/reducción(ones)
Estado 62 conflictos: 1 desplazamiento(s)/reducción(ones)
Estado 63 conflictos: 1 desplazamiento(s)/reducción(ones)
Estado 85 conflictos: 1 desplazamiento(s)/reducción(ones)
Estado 90 conflictos: 8 desplazamiento(s)/reducción(ones)
Estado 94 conflictos: 1 desplazamiento(s)/reducción(ones)


Gramática

    0 $accept: program $end

    1 program: header_program block

    2 block: start_block local_var_dec sub_progs sentences end_block

    3 sub_progs: sub_progs sub_prog
    4          | /* vacío */

    5 sub_prog: header_subprogram block

    6 local_var_dec: START_VAR_DEC local_var END_VAR_DEC
    7              | /* vacío */

    8 header_program: type MAIN

    9 start_block: BEGIN_P

   10 end_block: END

   11 local_var: local_var var_body
   12          | var_body

   13 var_body: type list_id SEMICOLON

   14 header_subprogram: type ID PL parameters PR

   15 parameters: parameters COMMA type ID
   16           | type ID
   17           | /* vacío */

   18 sentences: sentences sentence
   19          | sentence

   20 sentence: block
   21         | sentence_assign
   22         | sentence_if_then_else
   23         | sentence_while
   24         | sentence_input
   25         | sentence_output
   26         | sentence_return
   27         | sentence_do_until
   28         | sentence_list_forward_back
   29         | sentence_list_start_cursor

   30 sentence_assign: ID ASSIGN expr SEMICOLON

   31 sentence_if_then_else: IF expr sentence
   32                      | IF expr sentence ELSE sentence

   33 sentence_while: WHILE expr sentence

   34 sentence_input: INPUT list_id SEMICOLON

   35 sentence_output: OUTPUT list_expr_cad SEMICOLON

   36 sentence_return: RETURN expr SEMICOLON

   37 sentence_do_until: DO sentence UNTIL expr SEMICOLON

   38 sentence_list_forward_back: expr OP_LIST SEMICOLON

   39 sentence_list_start_cursor: OP_LIST_START_CURSOR expr SEMICOLON

   40 expr: PL expr PR
   41     | OP_UNIT expr
   42     | expr OP_BIN expr
   43     | ID
   44     | const
   45     | function_call
   46     | /* vacío */

   47 list_id: list_id COMMA ID
   48        | ID

   49 list_expr: list_expr COMMA expr
   50          | expr

   51 function_call: ID PL list_expr PR

   52 type: TYPE
   53     | LIST TYPE

   54 const: INT
   55      | FLOAT
   56      | LIMIT_CHAR CHAR LIMIT_CHAR
   57      | BOOL
   58      | const_list

   59 const_list: list_of_int
   60           | list_of_float
   61           | list_of_char
   62           | list_of_bool

   63 list_of_int: BEGIN_LIST list_int END_LIST

   64 list_int: list_int COMMA INT
   65         | INT

   66 list_of_float: BEGIN_LIST list_float END_LIST

   67 list_float: list_float COMMA FLOAT
   68           | FLOAT

   69 list_of_char: BEGIN_LIST list_char END_LIST

   70 list_char: list_char COMMA LIMIT_CHAR CHAR LIMIT_CHAR
   71          | LIMIT_CHAR CHAR LIMIT_CHAR

   72 list_of_bool: BEGIN_LIST list_bool END_LIST

   73 list_bool: list_bool COMMA BOOL
   74          | BOOL

   75 list_expr_cad: list_expr_cad COMMA expr_cad
   76              | expr_cad

   77 expr_cad: expr
   78         | CAD


Terminales con las reglas donde aparecen

$end (0) 0
error (256)
MAIN (258) 8
IF (259) 31 32
ELSE (260) 32
DO (261) 37
UNTIL (262) 37
OP_BIN (263) 42
OP_LIST (264) 38
OP_LIST_START_CURSOR (265) 39
OP_UNIT (266) 41
OP_PM (267)
TYPE (268) 52 53
BEGIN_LIST (269) 63 66 69 72
END_LIST (270) 63 66 69 72
ASSIGN (271) 30
PL (272) 14 40 51
PR (273) 14 40 51
BEGIN_P (274) 9
END (275) 10
COMMA (276) 15 47 49 64 67 70 73 75
SEMICOLON (277) 13 30 34 35 36 37 38 39
INPUT (278) 34
OUTPUT (279) 35
START_VAR_DEC (280) 6
END_VAR_DEC (281) 6
LIST (282) 53
ID (283) 14 15 16 30 43 47 48 51
BOOL (284) 57 73 74
RETURN (285) 36
LIMIT_CHAR (286) 56 70 71
DIGIT (287)
LETTER (288)
SYMBOL (289)
MINUS (290)
POINT (291)
WHILE (292) 33
INT (293) 54 64 65
FLOAT (294) 55 67 68
CHAR (295) 56 70 71
CAD (296) 78


No terminales con las reglas donde aparecen

$accept (42)
    en la izquierda: 0
program (43)
    en la izquierda: 1, en la derecha: 0
block (44)
    en la izquierda: 2, en la derecha: 1 5 20
sub_progs (45)
    en la izquierda: 3 4, en la derecha: 2 3
sub_prog (46)
    en la izquierda: 5, en la derecha: 3
local_var_dec (47)
    en la izquierda: 6 7, en la derecha: 2
header_program (48)
    en la izquierda: 8, en la derecha: 1
start_block (49)
    en la izquierda: 9, en la derecha: 2
end_block (50)
    en la izquierda: 10, en la derecha: 2
local_var (51)
    en la izquierda: 11 12, en la derecha: 6 11
var_body (52)
    en la izquierda: 13, en la derecha: 11 12
header_subprogram (53)
    en la izquierda: 14, en la derecha: 5
parameters (54)
    en la izquierda: 15 16 17, en la derecha: 14 15
sentences (55)
    en la izquierda: 18 19, en la derecha: 2 18
sentence (56)
    en la izquierda: 20 21 22 23 24 25 26 27 28 29, en la derecha:
    18 19 31 32 33 37
sentence_assign (57)
    en la izquierda: 30, en la derecha: 21
sentence_if_then_else (58)
    en la izquierda: 31 32, en la derecha: 22
sentence_while (59)
    en la izquierda: 33, en la derecha: 23
sentence_input (60)
    en la izquierda: 34, en la derecha: 24
sentence_output (61)
    en la izquierda: 35, en la derecha: 25
sentence_return (62)
    en la izquierda: 36, en la derecha: 26
sentence_do_until (63)
    en la izquierda: 37, en la derecha: 27
sentence_list_forward_back (64)
    en la izquierda: 38, en la derecha: 28
sentence_list_start_cursor (65)
    en la izquierda: 39, en la derecha: 29
expr (66)
    en la izquierda: 40 41 42 43 44 45 46, en la derecha: 30 31 32
    33 36 37 38 39 40 41 42 49 50 77
list_id (67)
    en la izquierda: 47 48, en la derecha: 13 34 47
list_expr (68)
    en la izquierda: 49 50, en la derecha: 49 51
function_call (69)
    en la izquierda: 51, en la derecha: 45
type (70)
    en la izquierda: 52 53, en la derecha: 8 13 14 15 16
const (71)
    en la izquierda: 54 55 56 57 58, en la derecha: 44
const_list (72)
    en la izquierda: 59 60 61 62, en la derecha: 58
list_of_int (73)
    en la izquierda: 63, en la derecha: 59
list_int (74)
    en la izquierda: 64 65, en la derecha: 63 64
list_of_float (75)
    en la izquierda: 66, en la derecha: 60
list_float (76)
    en la izquierda: 67 68, en la derecha: 66 67
list_of_char (77)
    en la izquierda: 69, en la derecha: 61
list_char (78)
    en la izquierda: 70 71, en la derecha: 69 70
list_of_bool (79)
    en la izquierda: 72, en la derecha: 62
list_bool (80)
    en la izquierda: 73 74, en la derecha: 72 73
list_expr_cad (81)
    en la izquierda: 75 76, en la derecha: 35 75
expr_cad (82)
    en la izquierda: 77 78, en la derecha: 75 76


State 0

    0 $accept: . program $end

    TYPE  desplazar e ir al estado 1
    LIST  desplazar e ir al estado 2

    program         ir al estado 3
    header_program  ir al estado 4
    type            ir al estado 5


State 1

   52 type: TYPE .

    $default  reduce usando la regla 52 (type)


State 2

   53 type: LIST . TYPE

    TYPE  desplazar e ir al estado 6


State 3

    0 $accept: program . $end

    $end  desplazar e ir al estado 7


State 4

    1 program: header_program . block

    BEGIN_P  desplazar e ir al estado 8

    block        ir al estado 9
    start_block  ir al estado 10


State 5

    8 header_program: type . MAIN

    MAIN  desplazar e ir al estado 11


State 6

   53 type: LIST TYPE .

    $default  reduce usando la regla 53 (type)


State 7

    0 $accept: program $end .

    $default  aceptar


State 8

    9 start_block: BEGIN_P .

    $default  reduce usando la regla 9 (start_block)


State 9

    1 program: header_program block .

    $default  reduce usando la regla 1 (program)


State 10

    2 block: start_block . local_var_dec sub_progs sentences end_block

    START_VAR_DEC  desplazar e ir al estado 12

    $default  reduce usando la regla 7 (local_var_dec)

    local_var_dec  ir al estado 13


State 11

    8 header_program: type MAIN .

    $default  reduce usando la regla 8 (header_program)


State 12

    6 local_var_dec: START_VAR_DEC . local_var END_VAR_DEC

    TYPE  desplazar e ir al estado 1
    LIST  desplazar e ir al estado 2

    local_var  ir al estado 14
    var_body   ir al estado 15
    type       ir al estado 16


State 13

    2 block: start_block local_var_dec . sub_progs sentences end_block

    $default  reduce usando la regla 4 (sub_progs)

    sub_progs  ir al estado 17


State 14

    6 local_var_dec: START_VAR_DEC local_var . END_VAR_DEC
   11 local_var: local_var . var_body

    TYPE         desplazar e ir al estado 1
    END_VAR_DEC  desplazar e ir al estado 18
    LIST         desplazar e ir al estado 2

    var_body  ir al estado 19
    type      ir al estado 16


State 15

   12 local_var: var_body .

    $default  reduce usando la regla 12 (local_var)


State 16

   13 var_body: type . list_id SEMICOLON

    ID  desplazar e ir al estado 20

    list_id  ir al estado 21


State 17

    2 block: start_block local_var_dec sub_progs . sentences end_block
    3 sub_progs: sub_progs . sub_prog

    IF                    desplazar e ir al estado 22
    DO                    desplazar e ir al estado 23
    OP_LIST_START_CURSOR  desplazar e ir al estado 24
    OP_UNIT               desplazar e ir al estado 25
    TYPE                  desplazar e ir al estado 1
    BEGIN_LIST            desplazar e ir al estado 26
    PL                    desplazar e ir al estado 27
    BEGIN_P               desplazar e ir al estado 8
    INPUT                 desplazar e ir al estado 28
    OUTPUT                desplazar e ir al estado 29
    LIST                  desplazar e ir al estado 2
    ID                    desplazar e ir al estado 30
    BOOL                  desplazar e ir al estado 31
    RETURN                desplazar e ir al estado 32
    LIMIT_CHAR            desplazar e ir al estado 33
    WHILE                 desplazar e ir al estado 34
    INT                   desplazar e ir al estado 35
    FLOAT                 desplazar e ir al estado 36

    $default  reduce usando la regla 46 (expr)

    block                       ir al estado 37
    sub_prog                    ir al estado 38
    start_block                 ir al estado 10
    header_subprogram           ir al estado 39
    sentences                   ir al estado 40
    sentence                    ir al estado 41
    sentence_assign             ir al estado 42
    sentence_if_then_else       ir al estado 43
    sentence_while              ir al estado 44
    sentence_input              ir al estado 45
    sentence_output             ir al estado 46
    sentence_return             ir al estado 47
    sentence_do_until           ir al estado 48
    sentence_list_forward_back  ir al estado 49
    sentence_list_start_cursor  ir al estado 50
    expr                        ir al estado 51
    function_call               ir al estado 52
    type                        ir al estado 53
    const                       ir al estado 54
    const_list                  ir al estado 55
    list_of_int                 ir al estado 56
    list_of_float               ir al estado 57
    list_of_char                ir al estado 58
    list_of_bool                ir al estado 59


State 18

    6 local_var_dec: START_VAR_DEC local_var END_VAR_DEC .

    $default  reduce usando la regla 6 (local_var_dec)


State 19

   11 local_var: local_var var_body .

    $default  reduce usando la regla 11 (local_var)


State 20

   48 list_id: ID .

    $default  reduce usando la regla 48 (list_id)


State 21

   13 var_body: type list_id . SEMICOLON
   47 list_id: list_id . COMMA ID

    COMMA      desplazar e ir al estado 60
    SEMICOLON  desplazar e ir al estado 61


State 22

   31 sentence_if_then_else: IF . expr sentence
   32                      | IF . expr sentence ELSE sentence

    OP_UNIT     desplazar e ir al estado 25
    BEGIN_LIST  desplazar e ir al estado 26
    PL          desplazar e ir al estado 27
    ID          desplazar e ir al estado 62
    BOOL        desplazar e ir al estado 31
    LIMIT_CHAR  desplazar e ir al estado 33
    INT         desplazar e ir al estado 35
    FLOAT       desplazar e ir al estado 36

    OP_UNIT     [reduce usando la regla 46 (expr)]
    BEGIN_LIST  [reduce usando la regla 46 (expr)]
    PL          [reduce usando la regla 46 (expr)]
    ID          [reduce usando la regla 46 (expr)]
    BOOL        [reduce usando la regla 46 (expr)]
    LIMIT_CHAR  [reduce usando la regla 46 (expr)]
    INT         [reduce usando la regla 46 (expr)]
    FLOAT       [reduce usando la regla 46 (expr)]
    $default    reduce usando la regla 46 (expr)

    expr           ir al estado 63
    function_call  ir al estado 52
    const          ir al estado 54
    const_list     ir al estado 55
    list_of_int    ir al estado 56
    list_of_float  ir al estado 57
    list_of_char   ir al estado 58
    list_of_bool   ir al estado 59


State 23

   37 sentence_do_until: DO . sentence UNTIL expr SEMICOLON

    IF                    desplazar e ir al estado 22
    DO                    desplazar e ir al estado 23
    OP_LIST_START_CURSOR  desplazar e ir al estado 24
    OP_UNIT               desplazar e ir al estado 25
    BEGIN_LIST            desplazar e ir al estado 26
    PL                    desplazar e ir al estado 27
    BEGIN_P               desplazar e ir al estado 8
    INPUT                 desplazar e ir al estado 28
    OUTPUT                desplazar e ir al estado 29
    ID                    desplazar e ir al estado 30
    BOOL                  desplazar e ir al estado 31
    RETURN                desplazar e ir al estado 32
    LIMIT_CHAR            desplazar e ir al estado 33
    WHILE                 desplazar e ir al estado 34
    INT                   desplazar e ir al estado 35
    FLOAT                 desplazar e ir al estado 36

    $default  reduce usando la regla 46 (expr)

    block                       ir al estado 37
    start_block                 ir al estado 10
    sentence                    ir al estado 64
    sentence_assign             ir al estado 42
    sentence_if_then_else       ir al estado 43
    sentence_while              ir al estado 44
    sentence_input              ir al estado 45
    sentence_output             ir al estado 46
    sentence_return             ir al estado 47
    sentence_do_until           ir al estado 48
    sentence_list_forward_back  ir al estado 49
    sentence_list_start_cursor  ir al estado 50
    expr                        ir al estado 51
    function_call               ir al estado 52
    const                       ir al estado 54
    const_list                  ir al estado 55
    list_of_int                 ir al estado 56
    list_of_float               ir al estado 57
    list_of_char                ir al estado 58
    list_of_bool                ir al estado 59


State 24

   39 sentence_list_start_cursor: OP_LIST_START_CURSOR . expr SEMICOLON

    OP_UNIT     desplazar e ir al estado 25
    BEGIN_LIST  desplazar e ir al estado 26
    PL          desplazar e ir al estado 27
    ID          desplazar e ir al estado 62
    BOOL        desplazar e ir al estado 31
    LIMIT_CHAR  desplazar e ir al estado 33
    INT         desplazar e ir al estado 35
    FLOAT       desplazar e ir al estado 36

    $default  reduce usando la regla 46 (expr)

    expr           ir al estado 65
    function_call  ir al estado 52
    const          ir al estado 54
    const_list     ir al estado 55
    list_of_int    ir al estado 56
    list_of_float  ir al estado 57
    list_of_char   ir al estado 58
    list_of_bool   ir al estado 59


State 25

   41 expr: OP_UNIT . expr

    OP_UNIT     desplazar e ir al estado 25
    BEGIN_LIST  desplazar e ir al estado 26
    PL          desplazar e ir al estado 27
    ID          desplazar e ir al estado 62
    BOOL        desplazar e ir al estado 31
    LIMIT_CHAR  desplazar e ir al estado 33
    INT         desplazar e ir al estado 35
    FLOAT       desplazar e ir al estado 36

    OP_UNIT     [reduce usando la regla 46 (expr)]
    BEGIN_LIST  [reduce usando la regla 46 (expr)]
    PL          [reduce usando la regla 46 (expr)]
    ID          [reduce usando la regla 46 (expr)]
    BOOL        [reduce usando la regla 46 (expr)]
    LIMIT_CHAR  [reduce usando la regla 46 (expr)]
    INT         [reduce usando la regla 46 (expr)]
    FLOAT       [reduce usando la regla 46 (expr)]
    $default    reduce usando la regla 46 (expr)

    expr           ir al estado 66
    function_call  ir al estado 52
    const          ir al estado 54
    const_list     ir al estado 55
    list_of_int    ir al estado 56
    list_of_float  ir al estado 57
    list_of_char   ir al estado 58
    list_of_bool   ir al estado 59


State 26

   63 list_of_int: BEGIN_LIST . list_int END_LIST
   66 list_of_float: BEGIN_LIST . list_float END_LIST
   69 list_of_char: BEGIN_LIST . list_char END_LIST
   72 list_of_bool: BEGIN_LIST . list_bool END_LIST

    BOOL        desplazar e ir al estado 67
    LIMIT_CHAR  desplazar e ir al estado 68
    INT         desplazar e ir al estado 69
    FLOAT       desplazar e ir al estado 70

    list_int    ir al estado 71
    list_float  ir al estado 72
    list_char   ir al estado 73
    list_bool   ir al estado 74


State 27

   40 expr: PL . expr PR

    OP_UNIT     desplazar e ir al estado 25
    BEGIN_LIST  desplazar e ir al estado 26
    PL          desplazar e ir al estado 27
    ID          desplazar e ir al estado 62
    BOOL        desplazar e ir al estado 31
    LIMIT_CHAR  desplazar e ir al estado 33
    INT         desplazar e ir al estado 35
    FLOAT       desplazar e ir al estado 36

    $default  reduce usando la regla 46 (expr)

    expr           ir al estado 75
    function_call  ir al estado 52
    const          ir al estado 54
    const_list     ir al estado 55
    list_of_int    ir al estado 56
    list_of_float  ir al estado 57
    list_of_char   ir al estado 58
    list_of_bool   ir al estado 59


State 28

   34 sentence_input: INPUT . list_id SEMICOLON

    ID  desplazar e ir al estado 20

    list_id  ir al estado 76


State 29

   35 sentence_output: OUTPUT . list_expr_cad SEMICOLON

    OP_UNIT     desplazar e ir al estado 25
    BEGIN_LIST  desplazar e ir al estado 26
    PL          desplazar e ir al estado 27
    ID          desplazar e ir al estado 62
    BOOL        desplazar e ir al estado 31
    LIMIT_CHAR  desplazar e ir al estado 33
    INT         desplazar e ir al estado 35
    FLOAT       desplazar e ir al estado 36
    CAD         desplazar e ir al estado 77

    $default  reduce usando la regla 46 (expr)

    expr           ir al estado 78
    function_call  ir al estado 52
    const          ir al estado 54
    const_list     ir al estado 55
    list_of_int    ir al estado 56
    list_of_float  ir al estado 57
    list_of_char   ir al estado 58
    list_of_bool   ir al estado 59
    list_expr_cad  ir al estado 79
    expr_cad       ir al estado 80


State 30

   30 sentence_assign: ID . ASSIGN expr SEMICOLON
   43 expr: ID .
   51 function_call: ID . PL list_expr PR

    ASSIGN  desplazar e ir al estado 81
    PL      desplazar e ir al estado 82

    $default  reduce usando la regla 43 (expr)


State 31

   57 const: BOOL .

    $default  reduce usando la regla 57 (const)


State 32

   36 sentence_return: RETURN . expr SEMICOLON

    OP_UNIT     desplazar e ir al estado 25
    BEGIN_LIST  desplazar e ir al estado 26
    PL          desplazar e ir al estado 27
    ID          desplazar e ir al estado 62
    BOOL        desplazar e ir al estado 31
    LIMIT_CHAR  desplazar e ir al estado 33
    INT         desplazar e ir al estado 35
    FLOAT       desplazar e ir al estado 36

    $default  reduce usando la regla 46 (expr)

    expr           ir al estado 83
    function_call  ir al estado 52
    const          ir al estado 54
    const_list     ir al estado 55
    list_of_int    ir al estado 56
    list_of_float  ir al estado 57
    list_of_char   ir al estado 58
    list_of_bool   ir al estado 59


State 33

   56 const: LIMIT_CHAR . CHAR LIMIT_CHAR

    CHAR  desplazar e ir al estado 84


State 34

   33 sentence_while: WHILE . expr sentence

    OP_UNIT     desplazar e ir al estado 25
    BEGIN_LIST  desplazar e ir al estado 26
    PL          desplazar e ir al estado 27
    ID          desplazar e ir al estado 62
    BOOL        desplazar e ir al estado 31
    LIMIT_CHAR  desplazar e ir al estado 33
    INT         desplazar e ir al estado 35
    FLOAT       desplazar e ir al estado 36

    OP_UNIT     [reduce usando la regla 46 (expr)]
    BEGIN_LIST  [reduce usando la regla 46 (expr)]
    PL          [reduce usando la regla 46 (expr)]
    ID          [reduce usando la regla 46 (expr)]
    BOOL        [reduce usando la regla 46 (expr)]
    LIMIT_CHAR  [reduce usando la regla 46 (expr)]
    INT         [reduce usando la regla 46 (expr)]
    FLOAT       [reduce usando la regla 46 (expr)]
    $default    reduce usando la regla 46 (expr)

    expr           ir al estado 85
    function_call  ir al estado 52
    const          ir al estado 54
    const_list     ir al estado 55
    list_of_int    ir al estado 56
    list_of_float  ir al estado 57
    list_of_char   ir al estado 58
    list_of_bool   ir al estado 59


State 35

   54 const: INT .

    $default  reduce usando la regla 54 (const)


State 36

   55 const: FLOAT .

    $default  reduce usando la regla 55 (const)


State 37

   20 sentence: block .

    $default  reduce usando la regla 20 (sentence)


State 38

    3 sub_progs: sub_progs sub_prog .

    $default  reduce usando la regla 3 (sub_progs)


State 39

    5 sub_prog: header_subprogram . block

    BEGIN_P  desplazar e ir al estado 8

    block        ir al estado 86
    start_block  ir al estado 10


State 40

    2 block: start_block local_var_dec sub_progs sentences . end_block
   18 sentences: sentences . sentence

    IF                    desplazar e ir al estado 22
    DO                    desplazar e ir al estado 23
    OP_LIST_START_CURSOR  desplazar e ir al estado 24
    OP_UNIT               desplazar e ir al estado 25
    BEGIN_LIST            desplazar e ir al estado 26
    PL                    desplazar e ir al estado 27
    BEGIN_P               desplazar e ir al estado 8
    END                   desplazar e ir al estado 87
    INPUT                 desplazar e ir al estado 28
    OUTPUT                desplazar e ir al estado 29
    ID                    desplazar e ir al estado 30
    BOOL                  desplazar e ir al estado 31
    RETURN                desplazar e ir al estado 32
    LIMIT_CHAR            desplazar e ir al estado 33
    WHILE                 desplazar e ir al estado 34
    INT                   desplazar e ir al estado 35
    FLOAT                 desplazar e ir al estado 36

    $default  reduce usando la regla 46 (expr)

    block                       ir al estado 37
    start_block                 ir al estado 10
    end_block                   ir al estado 88
    sentence                    ir al estado 89
    sentence_assign             ir al estado 42
    sentence_if_then_else       ir al estado 43
    sentence_while              ir al estado 44
    sentence_input              ir al estado 45
    sentence_output             ir al estado 46
    sentence_return             ir al estado 47
    sentence_do_until           ir al estado 48
    sentence_list_forward_back  ir al estado 49
    sentence_list_start_cursor  ir al estado 50
    expr                        ir al estado 51
    function_call               ir al estado 52
    const                       ir al estado 54
    const_list                  ir al estado 55
    list_of_int                 ir al estado 56
    list_of_float               ir al estado 57
    list_of_char                ir al estado 58
    list_of_bool                ir al estado 59


State 41

   19 sentences: sentence .

    $default  reduce usando la regla 19 (sentences)


State 42

   21 sentence: sentence_assign .

    $default  reduce usando la regla 21 (sentence)


State 43

   22 sentence: sentence_if_then_else .

    $default  reduce usando la regla 22 (sentence)


State 44

   23 sentence: sentence_while .

    $default  reduce usando la regla 23 (sentence)


State 45

   24 sentence: sentence_input .

    $default  reduce usando la regla 24 (sentence)


State 46

   25 sentence: sentence_output .

    $default  reduce usando la regla 25 (sentence)


State 47

   26 sentence: sentence_return .

    $default  reduce usando la regla 26 (sentence)


State 48

   27 sentence: sentence_do_until .

    $default  reduce usando la regla 27 (sentence)


State 49

   28 sentence: sentence_list_forward_back .

    $default  reduce usando la regla 28 (sentence)


State 50

   29 sentence: sentence_list_start_cursor .

    $default  reduce usando la regla 29 (sentence)


State 51

   38 sentence_list_forward_back: expr . OP_LIST SEMICOLON
   42 expr: expr . OP_BIN expr

    OP_BIN   desplazar e ir al estado 90
    OP_LIST  desplazar e ir al estado 91


State 52

   45 expr: function_call .

    $default  reduce usando la regla 45 (expr)


State 53

   14 header_subprogram: type . ID PL parameters PR

    ID  desplazar e ir al estado 92


State 54

   44 expr: const .

    $default  reduce usando la regla 44 (expr)


State 55

   58 const: const_list .

    $default  reduce usando la regla 58 (const)


State 56

   59 const_list: list_of_int .

    $default  reduce usando la regla 59 (const_list)


State 57

   60 const_list: list_of_float .

    $default  reduce usando la regla 60 (const_list)


State 58

   61 const_list: list_of_char .

    $default  reduce usando la regla 61 (const_list)


State 59

   62 const_list: list_of_bool .

    $default  reduce usando la regla 62 (const_list)


State 60

   47 list_id: list_id COMMA . ID

    ID  desplazar e ir al estado 93


State 61

   13 var_body: type list_id SEMICOLON .

    $default  reduce usando la regla 13 (var_body)


State 62

   43 expr: ID .
   51 function_call: ID . PL list_expr PR

    PL  desplazar e ir al estado 82

    PL        [reduce usando la regla 43 (expr)]
    $default  reduce usando la regla 43 (expr)


State 63

   31 sentence_if_then_else: IF expr . sentence
   32                      | IF expr . sentence ELSE sentence
   42 expr: expr . OP_BIN expr

    IF                    desplazar e ir al estado 22
    DO                    desplazar e ir al estado 23
    OP_BIN                desplazar e ir al estado 90
    OP_LIST_START_CURSOR  desplazar e ir al estado 24
    OP_UNIT               desplazar e ir al estado 25
    BEGIN_LIST            desplazar e ir al estado 26
    PL                    desplazar e ir al estado 27
    BEGIN_P               desplazar e ir al estado 8
    INPUT                 desplazar e ir al estado 28
    OUTPUT                desplazar e ir al estado 29
    ID                    desplazar e ir al estado 30
    BOOL                  desplazar e ir al estado 31
    RETURN                desplazar e ir al estado 32
    LIMIT_CHAR            desplazar e ir al estado 33
    WHILE                 desplazar e ir al estado 34
    INT                   desplazar e ir al estado 35
    FLOAT                 desplazar e ir al estado 36

    OP_BIN    [reduce usando la regla 46 (expr)]
    $default  reduce usando la regla 46 (expr)

    block                       ir al estado 37
    start_block                 ir al estado 10
    sentence                    ir al estado 94
    sentence_assign             ir al estado 42
    sentence_if_then_else       ir al estado 43
    sentence_while              ir al estado 44
    sentence_input              ir al estado 45
    sentence_output             ir al estado 46
    sentence_return             ir al estado 47
    sentence_do_until           ir al estado 48
    sentence_list_forward_back  ir al estado 49
    sentence_list_start_cursor  ir al estado 50
    expr                        ir al estado 51
    function_call               ir al estado 52
    const                       ir al estado 54
    const_list                  ir al estado 55
    list_of_int                 ir al estado 56
    list_of_float               ir al estado 57
    list_of_char                ir al estado 58
    list_of_bool                ir al estado 59


State 64

   37 sentence_do_until: DO sentence . UNTIL expr SEMICOLON

    UNTIL  desplazar e ir al estado 95


State 65

   39 sentence_list_start_cursor: OP_LIST_START_CURSOR expr . SEMICOLON
   42 expr: expr . OP_BIN expr

    OP_BIN     desplazar e ir al estado 90
    SEMICOLON  desplazar e ir al estado 96


State 66

   41 expr: OP_UNIT expr .
   42     | expr . OP_BIN expr

    $default  reduce usando la regla 41 (expr)


State 67

   74 list_bool: BOOL .

    $default  reduce usando la regla 74 (list_bool)


State 68

   71 list_char: LIMIT_CHAR . CHAR LIMIT_CHAR

    CHAR  desplazar e ir al estado 97


State 69

   65 list_int: INT .

    $default  reduce usando la regla 65 (list_int)


State 70

   68 list_float: FLOAT .

    $default  reduce usando la regla 68 (list_float)


State 71

   63 list_of_int: BEGIN_LIST list_int . END_LIST
   64 list_int: list_int . COMMA INT

    END_LIST  desplazar e ir al estado 98
    COMMA     desplazar e ir al estado 99


State 72

   66 list_of_float: BEGIN_LIST list_float . END_LIST
   67 list_float: list_float . COMMA FLOAT

    END_LIST  desplazar e ir al estado 100
    COMMA     desplazar e ir al estado 101


State 73

   69 list_of_char: BEGIN_LIST list_char . END_LIST
   70 list_char: list_char . COMMA LIMIT_CHAR CHAR LIMIT_CHAR

    END_LIST  desplazar e ir al estado 102
    COMMA     desplazar e ir al estado 103


State 74

   72 list_of_bool: BEGIN_LIST list_bool . END_LIST
   73 list_bool: list_bool . COMMA BOOL

    END_LIST  desplazar e ir al estado 104
    COMMA     desplazar e ir al estado 105


State 75

   40 expr: PL expr . PR
   42     | expr . OP_BIN expr

    OP_BIN  desplazar e ir al estado 90
    PR      desplazar e ir al estado 106


State 76

   34 sentence_input: INPUT list_id . SEMICOLON
   47 list_id: list_id . COMMA ID

    COMMA      desplazar e ir al estado 60
    SEMICOLON  desplazar e ir al estado 107


State 77

   78 expr_cad: CAD .

    $default  reduce usando la regla 78 (expr_cad)


State 78

   42 expr: expr . OP_BIN expr
   77 expr_cad: expr .

    OP_BIN  desplazar e ir al estado 90

    $default  reduce usando la regla 77 (expr_cad)


State 79

   35 sentence_output: OUTPUT list_expr_cad . SEMICOLON
   75 list_expr_cad: list_expr_cad . COMMA expr_cad

    COMMA      desplazar e ir al estado 108
    SEMICOLON  desplazar e ir al estado 109


State 80

   76 list_expr_cad: expr_cad .

    $default  reduce usando la regla 76 (list_expr_cad)


State 81

   30 sentence_assign: ID ASSIGN . expr SEMICOLON

    OP_UNIT     desplazar e ir al estado 25
    BEGIN_LIST  desplazar e ir al estado 26
    PL          desplazar e ir al estado 27
    ID          desplazar e ir al estado 62
    BOOL        desplazar e ir al estado 31
    LIMIT_CHAR  desplazar e ir al estado 33
    INT         desplazar e ir al estado 35
    FLOAT       desplazar e ir al estado 36

    $default  reduce usando la regla 46 (expr)

    expr           ir al estado 110
    function_call  ir al estado 52
    const          ir al estado 54
    const_list     ir al estado 55
    list_of_int    ir al estado 56
    list_of_float  ir al estado 57
    list_of_char   ir al estado 58
    list_of_bool   ir al estado 59


State 82

   51 function_call: ID PL . list_expr PR

    OP_UNIT     desplazar e ir al estado 25
    BEGIN_LIST  desplazar e ir al estado 26
    PL          desplazar e ir al estado 27
    ID          desplazar e ir al estado 62
    BOOL        desplazar e ir al estado 31
    LIMIT_CHAR  desplazar e ir al estado 33
    INT         desplazar e ir al estado 35
    FLOAT       desplazar e ir al estado 36

    $default  reduce usando la regla 46 (expr)

    expr           ir al estado 111
    list_expr      ir al estado 112
    function_call  ir al estado 52
    const          ir al estado 54
    const_list     ir al estado 55
    list_of_int    ir al estado 56
    list_of_float  ir al estado 57
    list_of_char   ir al estado 58
    list_of_bool   ir al estado 59


State 83

   36 sentence_return: RETURN expr . SEMICOLON
   42 expr: expr . OP_BIN expr

    OP_BIN     desplazar e ir al estado 90
    SEMICOLON  desplazar e ir al estado 113


State 84

   56 const: LIMIT_CHAR CHAR . LIMIT_CHAR

    LIMIT_CHAR  desplazar e ir al estado 114


State 85

   33 sentence_while: WHILE expr . sentence
   42 expr: expr . OP_BIN expr

    IF                    desplazar e ir al estado 22
    DO                    desplazar e ir al estado 23
    OP_BIN                desplazar e ir al estado 90
    OP_LIST_START_CURSOR  desplazar e ir al estado 24
    OP_UNIT               desplazar e ir al estado 25
    BEGIN_LIST            desplazar e ir al estado 26
    PL                    desplazar e ir al estado 27
    BEGIN_P               desplazar e ir al estado 8
    INPUT                 desplazar e ir al estado 28
    OUTPUT                desplazar e ir al estado 29
    ID                    desplazar e ir al estado 30
    BOOL                  desplazar e ir al estado 31
    RETURN                desplazar e ir al estado 32
    LIMIT_CHAR            desplazar e ir al estado 33
    WHILE                 desplazar e ir al estado 34
    INT                   desplazar e ir al estado 35
    FLOAT                 desplazar e ir al estado 36

    OP_BIN    [reduce usando la regla 46 (expr)]
    $default  reduce usando la regla 46 (expr)

    block                       ir al estado 37
    start_block                 ir al estado 10
    sentence                    ir al estado 115
    sentence_assign             ir al estado 42
    sentence_if_then_else       ir al estado 43
    sentence_while              ir al estado 44
    sentence_input              ir al estado 45
    sentence_output             ir al estado 46
    sentence_return             ir al estado 47
    sentence_do_until           ir al estado 48
    sentence_list_forward_back  ir al estado 49
    sentence_list_start_cursor  ir al estado 50
    expr                        ir al estado 51
    function_call               ir al estado 52
    const                       ir al estado 54
    const_list                  ir al estado 55
    list_of_int                 ir al estado 56
    list_of_float               ir al estado 57
    list_of_char                ir al estado 58
    list_of_bool                ir al estado 59


State 86

    5 sub_prog: header_subprogram block .

    $default  reduce usando la regla 5 (sub_prog)


State 87

   10 end_block: END .

    $default  reduce usando la regla 10 (end_block)


State 88

    2 block: start_block local_var_dec sub_progs sentences end_block .

    $default  reduce usando la regla 2 (block)


State 89

   18 sentences: sentences sentence .

    $default  reduce usando la regla 18 (sentences)


State 90

   42 expr: expr OP_BIN . expr

    OP_UNIT     desplazar e ir al estado 25
    BEGIN_LIST  desplazar e ir al estado 26
    PL          desplazar e ir al estado 27
    ID          desplazar e ir al estado 62
    BOOL        desplazar e ir al estado 31
    LIMIT_CHAR  desplazar e ir al estado 33
    INT         desplazar e ir al estado 35
    FLOAT       desplazar e ir al estado 36

    OP_UNIT     [reduce usando la regla 46 (expr)]
    BEGIN_LIST  [reduce usando la regla 46 (expr)]
    PL          [reduce usando la regla 46 (expr)]
    ID          [reduce usando la regla 46 (expr)]
    BOOL        [reduce usando la regla 46 (expr)]
    LIMIT_CHAR  [reduce usando la regla 46 (expr)]
    INT         [reduce usando la regla 46 (expr)]
    FLOAT       [reduce usando la regla 46 (expr)]
    $default    reduce usando la regla 46 (expr)

    expr           ir al estado 116
    function_call  ir al estado 52
    const          ir al estado 54
    const_list     ir al estado 55
    list_of_int    ir al estado 56
    list_of_float  ir al estado 57
    list_of_char   ir al estado 58
    list_of_bool   ir al estado 59


State 91

   38 sentence_list_forward_back: expr OP_LIST . SEMICOLON

    SEMICOLON  desplazar e ir al estado 117


State 92

   14 header_subprogram: type ID . PL parameters PR

    PL  desplazar e ir al estado 118


State 93

   47 list_id: list_id COMMA ID .

    $default  reduce usando la regla 47 (list_id)


State 94

   31 sentence_if_then_else: IF expr sentence .
   32                      | IF expr sentence . ELSE sentence

    ELSE  desplazar e ir al estado 119

    ELSE      [reduce usando la regla 31 (sentence_if_then_else)]
    $default  reduce usando la regla 31 (sentence_if_then_else)


State 95

   37 sentence_do_until: DO sentence UNTIL . expr SEMICOLON

    OP_UNIT     desplazar e ir al estado 25
    BEGIN_LIST  desplazar e ir al estado 26
    PL          desplazar e ir al estado 27
    ID          desplazar e ir al estado 62
    BOOL        desplazar e ir al estado 31
    LIMIT_CHAR  desplazar e ir al estado 33
    INT         desplazar e ir al estado 35
    FLOAT       desplazar e ir al estado 36

    $default  reduce usando la regla 46 (expr)

    expr           ir al estado 120
    function_call  ir al estado 52
    const          ir al estado 54
    const_list     ir al estado 55
    list_of_int    ir al estado 56
    list_of_float  ir al estado 57
    list_of_char   ir al estado 58
    list_of_bool   ir al estado 59


State 96

   39 sentence_list_start_cursor: OP_LIST_START_CURSOR expr SEMICOLON .

    $default  reduce usando la regla 39 (sentence_list_start_cursor)


State 97

   71 list_char: LIMIT_CHAR CHAR . LIMIT_CHAR

    LIMIT_CHAR  desplazar e ir al estado 121


State 98

   63 list_of_int: BEGIN_LIST list_int END_LIST .

    $default  reduce usando la regla 63 (list_of_int)


State 99

   64 list_int: list_int COMMA . INT

    INT  desplazar e ir al estado 122


State 100

   66 list_of_float: BEGIN_LIST list_float END_LIST .

    $default  reduce usando la regla 66 (list_of_float)


State 101

   67 list_float: list_float COMMA . FLOAT

    FLOAT  desplazar e ir al estado 123


State 102

   69 list_of_char: BEGIN_LIST list_char END_LIST .

    $default  reduce usando la regla 69 (list_of_char)


State 103

   70 list_char: list_char COMMA . LIMIT_CHAR CHAR LIMIT_CHAR

    LIMIT_CHAR  desplazar e ir al estado 124


State 104

   72 list_of_bool: BEGIN_LIST list_bool END_LIST .

    $default  reduce usando la regla 72 (list_of_bool)


State 105

   73 list_bool: list_bool COMMA . BOOL

    BOOL  desplazar e ir al estado 125


State 106

   40 expr: PL expr PR .

    $default  reduce usando la regla 40 (expr)


State 107

   34 sentence_input: INPUT list_id SEMICOLON .

    $default  reduce usando la regla 34 (sentence_input)


State 108

   75 list_expr_cad: list_expr_cad COMMA . expr_cad

    OP_UNIT     desplazar e ir al estado 25
    BEGIN_LIST  desplazar e ir al estado 26
    PL          desplazar e ir al estado 27
    ID          desplazar e ir al estado 62
    BOOL        desplazar e ir al estado 31
    LIMIT_CHAR  desplazar e ir al estado 33
    INT         desplazar e ir al estado 35
    FLOAT       desplazar e ir al estado 36
    CAD         desplazar e ir al estado 77

    $default  reduce usando la regla 46 (expr)

    expr           ir al estado 78
    function_call  ir al estado 52
    const          ir al estado 54
    const_list     ir al estado 55
    list_of_int    ir al estado 56
    list_of_float  ir al estado 57
    list_of_char   ir al estado 58
    list_of_bool   ir al estado 59
    expr_cad       ir al estado 126


State 109

   35 sentence_output: OUTPUT list_expr_cad SEMICOLON .

    $default  reduce usando la regla 35 (sentence_output)


State 110

   30 sentence_assign: ID ASSIGN expr . SEMICOLON
   42 expr: expr . OP_BIN expr

    OP_BIN     desplazar e ir al estado 90
    SEMICOLON  desplazar e ir al estado 127


State 111

   42 expr: expr . OP_BIN expr
   50 list_expr: expr .

    OP_BIN  desplazar e ir al estado 90

    $default  reduce usando la regla 50 (list_expr)


State 112

   49 list_expr: list_expr . COMMA expr
   51 function_call: ID PL list_expr . PR

    PR     desplazar e ir al estado 128
    COMMA  desplazar e ir al estado 129


State 113

   36 sentence_return: RETURN expr SEMICOLON .

    $default  reduce usando la regla 36 (sentence_return)


State 114

   56 const: LIMIT_CHAR CHAR LIMIT_CHAR .

    $default  reduce usando la regla 56 (const)


State 115

   33 sentence_while: WHILE expr sentence .

    $default  reduce usando la regla 33 (sentence_while)


State 116

   42 expr: expr . OP_BIN expr
   42     | expr OP_BIN expr .

    $default  reduce usando la regla 42 (expr)


State 117

   38 sentence_list_forward_back: expr OP_LIST SEMICOLON .

    $default  reduce usando la regla 38 (sentence_list_forward_back)


State 118

   14 header_subprogram: type ID PL . parameters PR

    TYPE  desplazar e ir al estado 1
    LIST  desplazar e ir al estado 2

    $default  reduce usando la regla 17 (parameters)

    parameters  ir al estado 130
    type        ir al estado 131


State 119

   32 sentence_if_then_else: IF expr sentence ELSE . sentence

    IF                    desplazar e ir al estado 22
    DO                    desplazar e ir al estado 23
    OP_LIST_START_CURSOR  desplazar e ir al estado 24
    OP_UNIT               desplazar e ir al estado 25
    BEGIN_LIST            desplazar e ir al estado 26
    PL                    desplazar e ir al estado 27
    BEGIN_P               desplazar e ir al estado 8
    INPUT                 desplazar e ir al estado 28
    OUTPUT                desplazar e ir al estado 29
    ID                    desplazar e ir al estado 30
    BOOL                  desplazar e ir al estado 31
    RETURN                desplazar e ir al estado 32
    LIMIT_CHAR            desplazar e ir al estado 33
    WHILE                 desplazar e ir al estado 34
    INT                   desplazar e ir al estado 35
    FLOAT                 desplazar e ir al estado 36

    $default  reduce usando la regla 46 (expr)

    block                       ir al estado 37
    start_block                 ir al estado 10
    sentence                    ir al estado 132
    sentence_assign             ir al estado 42
    sentence_if_then_else       ir al estado 43
    sentence_while              ir al estado 44
    sentence_input              ir al estado 45
    sentence_output             ir al estado 46
    sentence_return             ir al estado 47
    sentence_do_until           ir al estado 48
    sentence_list_forward_back  ir al estado 49
    sentence_list_start_cursor  ir al estado 50
    expr                        ir al estado 51
    function_call               ir al estado 52
    const                       ir al estado 54
    const_list                  ir al estado 55
    list_of_int                 ir al estado 56
    list_of_float               ir al estado 57
    list_of_char                ir al estado 58
    list_of_bool                ir al estado 59


State 120

   37 sentence_do_until: DO sentence UNTIL expr . SEMICOLON
   42 expr: expr . OP_BIN expr

    OP_BIN     desplazar e ir al estado 90
    SEMICOLON  desplazar e ir al estado 133


State 121

   71 list_char: LIMIT_CHAR CHAR LIMIT_CHAR .

    $default  reduce usando la regla 71 (list_char)


State 122

   64 list_int: list_int COMMA INT .

    $default  reduce usando la regla 64 (list_int)


State 123

   67 list_float: list_float COMMA FLOAT .

    $default  reduce usando la regla 67 (list_float)


State 124

   70 list_char: list_char COMMA LIMIT_CHAR . CHAR LIMIT_CHAR

    CHAR  desplazar e ir al estado 134


State 125

   73 list_bool: list_bool COMMA BOOL .

    $default  reduce usando la regla 73 (list_bool)


State 126

   75 list_expr_cad: list_expr_cad COMMA expr_cad .

    $default  reduce usando la regla 75 (list_expr_cad)


State 127

   30 sentence_assign: ID ASSIGN expr SEMICOLON .

    $default  reduce usando la regla 30 (sentence_assign)


State 128

   51 function_call: ID PL list_expr PR .

    $default  reduce usando la regla 51 (function_call)


State 129

   49 list_expr: list_expr COMMA . expr

    OP_UNIT     desplazar e ir al estado 25
    BEGIN_LIST  desplazar e ir al estado 26
    PL          desplazar e ir al estado 27
    ID          desplazar e ir al estado 62
    BOOL        desplazar e ir al estado 31
    LIMIT_CHAR  desplazar e ir al estado 33
    INT         desplazar e ir al estado 35
    FLOAT       desplazar e ir al estado 36

    $default  reduce usando la regla 46 (expr)

    expr           ir al estado 135
    function_call  ir al estado 52
    const          ir al estado 54
    const_list     ir al estado 55
    list_of_int    ir al estado 56
    list_of_float  ir al estado 57
    list_of_char   ir al estado 58
    list_of_bool   ir al estado 59


State 130

   14 header_subprogram: type ID PL parameters . PR
   15 parameters: parameters . COMMA type ID

    PR     desplazar e ir al estado 136
    COMMA  desplazar e ir al estado 137


State 131

   16 parameters: type . ID

    ID  desplazar e ir al estado 138


State 132

   32 sentence_if_then_else: IF expr sentence ELSE sentence .

    $default  reduce usando la regla 32 (sentence_if_then_else)


State 133

   37 sentence_do_until: DO sentence UNTIL expr SEMICOLON .

    $default  reduce usando la regla 37 (sentence_do_until)


State 134

   70 list_char: list_char COMMA LIMIT_CHAR CHAR . LIMIT_CHAR

    LIMIT_CHAR  desplazar e ir al estado 139


State 135

   42 expr: expr . OP_BIN expr
   49 list_expr: list_expr COMMA expr .

    OP_BIN  desplazar e ir al estado 90

    $default  reduce usando la regla 49 (list_expr)


State 136

   14 header_subprogram: type ID PL parameters PR .

    $default  reduce usando la regla 14 (header_subprogram)


State 137

   15 parameters: parameters COMMA . type ID

    TYPE  desplazar e ir al estado 1
    LIST  desplazar e ir al estado 2

    type  ir al estado 140


State 138

   16 parameters: type ID .

    $default  reduce usando la regla 16 (parameters)


State 139

   70 list_char: list_char COMMA LIMIT_CHAR CHAR LIMIT_CHAR .

    $default  reduce usando la regla 70 (list_char)


State 140

   15 parameters: parameters COMMA type . ID

    ID  desplazar e ir al estado 141


State 141

   15 parameters: parameters COMMA type ID .

    $default  reduce usando la regla 15 (parameters)
